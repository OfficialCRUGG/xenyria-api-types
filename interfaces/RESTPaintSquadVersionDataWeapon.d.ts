import {
  RESTLocalizedString,
  RESTPaintSquadVersionDataWeaponDataActionRange,
  RESTPaintSquadVersionDataWeaponDataBurst,
} from ".";
import { PaintSquadWeaponType } from "../enums";

export interface RESTPaintSquadVersionDataWeapon {
  features?: {
    charge?: number;
    damage?: number;
    firing_rate?: number;
    mobility?: number;
    radius?: number;
    range?: number;
    range_raw?: number;
  };
  data: {
    activation_ranges?: RESTPaintSquadVersionDataWeaponDataActionRange[];
    amount_bubbles?: number;
    animation_steps?: number;
    bursts?: RESTPaintSquadVersionDataWeaponDataBurst[];
    can_store_not_fully_charged_shots?: boolean;
    can_store_shots?: boolean;
    charge_movement_modifier?: number;
    charge_time?: number;
    contact_damage?: number;
    contact_damage_invasion?: number;
    damage?: number;
    damage_invasion?: number;
    damage_per_projectile?: number;
    detonation_damage?: number;
    detonation_damage_invasion?: number;
    direct_hit_damage?: number;
    dodge_ink_consumption?: number;
    dodge_velocity?: number;
    drip_in_air_probability?: number;
    drip_on_hit_probability?: number;
    duration?: number;
    expansion_duration?: number;
    explosion_radius?: number;
    explosion_radius_invasion?: number;
    fall_off_projectile_damage?: boolean;
    fire_rate?: number;
    firing_movement_speed_modifier?: number;
    firing_speed?: number;
    firing_speed_invasion?: number;
    fling_projectile_count?: number;
    forced_orientation?: "VERTICAL" | "HORIZONTAL";
    fully_charged_damage?: number;
    has_horizontal_fling?: boolean;
    has_scope?: boolean;
    has_vertical_fling?: boolean;
    health?: number;
    horizontal_fling_consumption?: number;
    horizontal_fling_impulse?: number;
    horizontal_fling_max_damage?: number;
    horizontal_fling_min_damage?: number;
    horizontal_fling_spread?: number;
    horizontal_fling_width?: number;
    horizontal_off_angle_fling_max_damage?: number;
    horizontal_off_angle_fling_min_damage?: number;
    impact_damage?: number;
    in_air_accuracy_modifier?: number;
    ink_consumption?: number;
    interval?: number;
    linear_range?: number;
    max_damage?: number;
    max_dodges?: number;
    max_health?: number;
    max_horizontal_spread?: number;
    max_movement_modifier?: number;
    max_non_fully_charged_damage?: number;
    max_painting_radius?: number;
    max_projectile_impulse?: number;
    max_radius?: number;
    max_radius_invasion?: number;
    max_store_time?: number;
    max_targets?: number;
    max_targets_invasion?: number;
    max_vertical_spread?: number;
    min_movement_modifier?: number;
    min_non_fully_charged_damage?: number;
    min_painting_radius?: number;
    movement_modifier?: number;
    paint_radius_modifier?: number;
    projectile_count?: number;
    projectile_damage?: number;
    projectile_distance?: number;
    projectile_impulse?: number;
    projectiles_per_use?: number;
    radius?: number;
    range?: number;
    required_points?: number;
    roll_ink_consumption?: number;
    shots?: number;
    shots_to_max_spread?: number;
    size?: number;
    sloshing_speed?: number;
    speed?: number;
    splash_damage?: number;
    ticks_per_charge?: number;
    ticks_per_horizontal_fling?: number;
    ticks_per_projectile?: number;
    ticks_per_shot?: number;
    ticks_per_shot_invasion?: number;
    ticks_per_vertical_fling?: number;
    ticks_until_full_speed?: number;
    time_for_brush_swipe?: number;
    vertical_fling_consumption?: number;
    vertical_fling_impulse?: number;
    vertical_fling_max_damage?: number;
    vertical_fling_min_damage?: number;
    vertical_fling_spread?: number;
    vertical_fling_width?: number;
    vertical_off_angle_fling_max_damage?: number;
    vertical_off_angle_fling_min_damage?: number;
    width?: number;
  };
  name: RESTLocalizedString;
  model: string;
  id: number;
  type: PaintSquadWeaponType;
}
